package business

import (
	"sort"
	"strings"
	"time"
)

// Solution for business
func Solution(s string) int {
	arr := parsArr(s)
	sort.Ints(arr)

	max := arr[0]
	for idx := 1; idx < len(arr)-1; idx += 2 {
		delta := arr[idx+1] - arr[idx]
		if max < delta {
			max = delta
		}
	}
	delta := 10080 - arr[len(arr)-1]
	if max < delta {
		max = delta
	}

	return max
}

func parsArr(s string) []int {
	var arr []int
	pars := strings.Split(s, "\n")
	for _, value := range pars {
		sinceM, untilM := parsElm(value)
		arr = append(arr, sinceM, untilM)
	}
	return arr
}

func parsElm(a string) (sinceM, untilM int) {
	day := [7]string{"Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"}
	elm := strings.Split(a, " ")
	sElm := strings.Split(elm[1], "-")

	eDay := elm[0]
	pSince, _ := time.ParseDuration(strings.Replace(sElm[0], ":", "h", 1) + "m")
	pUntil, _ := time.ParseDuration(strings.Replace(sElm[1], ":", "h", 1) + "m")
	eSince := int(pSince.Minutes())
	eUntil := int(pUntil.Minutes())

	idx := 0
	for day[idx] != eDay {
		idx++
	}
	eSince += idx * 1440
	eUntil += idx * 1440

	return eSince, eUntil
}